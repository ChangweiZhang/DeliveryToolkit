<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DeliveryToolkit.View" 
             xmlns:Metro="clr-namespace:AduSkin.Controls.Metro;assembly=AduSkin"
             xmlns:pu="clr-namespace:Panuon.UI.Silver;assembly=Panuon.UI.Silver"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors" x:Class="DeliveryToolkit.View.PPTMarkupTool"
             mc:Ignorable="d"
    xmlns:svc="clr-namespace:DeliveryToolkit.Service"
             DataContext="{Binding PPTTool, Source={StaticResource Locator}}"
             d:DesignHeight="600" d:DesignWidth="800"
             >
    <Grid x:Name="RootLayout">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel>
            <TextBlock Text="选取PPT目录"
                       FontSize="14"
                       Margin="20"
                       MaxHeight="20"/>
            <Metro:MetroTextBox
                Margin="0,10,20,10"
                HorizontalAlignment="Stretch"
                Title="目录路径"
                ButtonTitle="选取文件夹"
                Foreground="{Binding ThemeBrush,Source={x:Static svc:ThemeManager.Instance}}"
                Text="{Binding PPTFolder}"
                IsEnabled="{Binding IsNoProcessRunning}">

                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ButtonClick">
                        <b:InvokeCommandAction Command="{Binding SelectPPTFolderCommand}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>

            </Metro:MetroTextBox>
            <Metro:MetroTextBox
                HorizontalAlignment="Stretch"
                Title="水印内容"
                Text="{Binding WaterMarker,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                IsEnabled="{Binding IsNoProcessRunning}"
                PopupHint="{Binding CheckMessage}"
                Foreground="Gray"
                Margin="0,0,20,0"
                >
                <!--Foreground="{Binding FontColor}"
                FontFamily="{Binding CurrentFont.FamilyName}"-->
            </Metro:MetroTextBox>
            <Grid Margin="20,0,20,0"
                  Height="50"
                  HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="120"></ColumnDefinition>
                    <ColumnDefinition MaxWidth="160" ></ColumnDefinition>
                    <ColumnDefinition  Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Metro:MetroTextBlock
                    Margin="10"
                    VerticalAlignment="Center"
                    Text="水印外观"
                    Foreground="#898989"></Metro:MetroTextBlock>
                <TextBox 
                    Grid.Column="3"
                    Margin="0,10"
                    pu:TextBoxHelper.CornerRadius="1"
                    VerticalContentAlignment="Center"
                    pu:TextBoxHelper.Icon="&#xf031;"
                    Foreground="{Binding ThemeBrush,Source={x:Static svc:ThemeManager.Instance}}"
                    HorizontalAlignment="Stretch"
                    Text="{Binding FontSize,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsNoProcessRunning}" Cursor="IBeam">
                </TextBox>
                <pu:ColorPicker
                    Grid.Column="2"
                    Margin="10"
                    Foreground="{Binding ThemeBrush,Source={x:Static svc:ThemeManager.Instance}}"
                    IsOpacityEnabled="True"
                    IsMeasuredValueVisible="True"
                    IsDefaultColorPanelVisible="True" 
                    SelectedBrush="{Binding FontColor,Mode=TwoWay}"
                    IsEnabled="{Binding IsNoProcessRunning}"/>
                <Metro:AduComboBox
                    SelectedItem="{Binding CurrentFont,Mode=TwoWay}"
                    HorizontalAlignment="Stretch"
                    Grid.Column="1"
                    Width="auto"  
                    SelectedIndex="0" 
                    Margin="0,10"  
                    CornerRadius="3"
                    ItemsSource="{Binding FontList}"
                    DisplayMemberPath="Name"
                    Foreground="{Binding ThemeBrush,Source={x:Static svc:ThemeManager.Instance}}">
                </Metro:AduComboBox>

            </Grid>

            <Button pu:ButtonHelper.ButtonStyle="Standard"
                    pu:ButtonHelper.Icon="&#xf1c1;"
                    Height="40"
                    Content="添加水印"
                    Margin="0,15,0,0"
                    pu:ButtonHelper.CornerRadius="5"
                    HorizontalAlignment="Center"
                    Background="{Binding ThemeBrush,Source={x:Static svc:ThemeManager.Instance}}"
                    IsEnabled="{Binding IsProcessEnable}"
                    Width="250"
                    Command="{Binding RunPPTProcessCommand}"></Button>
        </StackPanel>
        <ProgressBar  
            Grid.Column="1"
            Height="100"
            Width="100"
            pu:ProgressBarHelper.ProgressBarStyle="Ring"
            BorderBrush="{StaticResource DefaultBorderBrush}"
            Foreground="MediumSeaGreen"
            pu:ProgressBarHelper.AnimateTo="{Binding ProgressVal}"
            pu:ProgressBarHelper.IsPercentVisible="True" />
        <ListBox x:Name="listBox" Grid.Row="1" 
                 ItemsSource="{Binding PPTFiles}" 
                 BorderThickness="0"
                 Background="Transparent"
                 Margin="20,10"
                 Grid.ColumnSpan="2"
                 >
            <ListBox.Resources>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Cursor" Value="Hand"/>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border MinHeight="40"
                            x:Name="Bd" 
                            Width="{Binding ActualWidth, ElementName=listBox, Mode=OneWay}"
                            BorderBrush="#EBEBEB"
                            BorderThickness="0 1 0 0"
                            Background="Transparent">
                        <Grid HorizontalAlignment="Stretch"
                             >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="80" x:Name="state"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding FullName}" 
                                       Style="{StaticResource H5}"
                                       Foreground="{Binding ThemeBrush,Source={x:Static svc:ThemeManager.Instance}}" 
                                       Margin="20,0" 
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"/>
                            <Border Grid.Column="1" 
                                    x:Name="states" 
                                    Background="{Binding ThemeBrush,Source={x:Static svc:ThemeManager.Instance}}" 
                                    CornerRadius="8"
                                    Height="20"
                                    MinWidth="30"
                                    Padding="10,0"
                                    HorizontalAlignment="Right">
                                <TextBlock x:Name="stateName" Text="{Binding State}" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFF"/>
                            </Border>
                        </Grid>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"  Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#EAEAEA" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=State}"  Value="Unstarted">
                            <Setter TargetName="stateName" Property="Text" Value="待处理" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=State}"  Value="Processing">
                            <Setter TargetName="states" Property="Background" Value="#3399FF" />
                            <Setter TargetName="stateName" Property="Text" Value="处理中" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=State}"  Value="Success">
                            <Setter TargetName="states" Property="Background" Value="Green" />
                            <Setter TargetName="stateName" Property="Text" Value="成功" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=State}"  Value="Failure">
                            <Setter TargetName="states" Property="Background" Value="Red" />
                            <Setter TargetName="stateName" Property="Text" Value="失败" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="WhiteSmoke" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>

</UserControl>
